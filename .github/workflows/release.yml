name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    name: Build - ${{ matrix.platform.os_name }}
    runs-on: ${{ matrix.platform.os }}
    strategy:
      fail-fast: false
      matrix:
        platform:
          - os: ubuntu-latest
            os_name: linux
            target: x86_64-unknown-linux-gnu
            binary_suffix: ''
            artifact_name: simple_gui-linux-x86_64
            
          - os: windows-latest
            os_name: windows
            target: x86_64-pc-windows-msvc
            binary_suffix: .exe
            artifact_name: simple_gui-windows-x86_64
            
          - os: macos-latest
            os_name: macos
            target: x86_64-apple-darwin
            binary_suffix: ''
            artifact_name: simple_gui-macos-x86_64
            
          - os: macos-latest
            os_name: macos-arm
            target: aarch64-apple-darwin
            binary_suffix: ''
            artifact_name: simple_gui-macos-arm64

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform.target }}

      - name: Install Linux dependencies
        if: matrix.platform.os_name == 'linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libxcb-render0-dev \
            libxcb-shape0-dev \
            libxcb-xfixes0-dev \
            libxkbcommon-dev \
            libssl-dev \
            libgtk-3-dev

      - name: Cache Cargo registry
        uses: actions/cache@v4
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache Cargo index
        uses: actions/cache@v4
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-git-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache Cargo build
        uses: actions/cache@v4
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}

      - name: Build binary
        run: |
          cargo build --release --example simple_gui --features gui --target ${{ matrix.platform.target }}

      - name: Create artifact directory
        run: mkdir -p artifacts

      - name: Copy binary (Unix)
        if: matrix.platform.os_name != 'windows'
        run: |
          cp target/${{ matrix.platform.target }}/release/examples/simple_gui${{ matrix.platform.binary_suffix }} \
             artifacts/${{ matrix.platform.artifact_name }}${{ matrix.platform.binary_suffix }}

      - name: Copy binary (Windows)
        if: matrix.platform.os_name == 'windows'
        run: |
          Copy-Item "target/${{ matrix.platform.target }}/release/examples/simple_gui${{ matrix.platform.binary_suffix }}" `
                    "artifacts/${{ matrix.platform.artifact_name }}${{ matrix.platform.binary_suffix }}"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform.artifact_name }}
          path: artifacts/${{ matrix.platform.artifact_name }}${{ matrix.platform.binary_suffix }}
          if-no-files-found: error

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Display structure of downloaded files
        run: ls -R artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          draft: false
          prerelease: false
          generate_release_notes: true
          files: |
            artifacts/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

